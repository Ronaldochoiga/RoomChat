{"ast":null,"code":"var _jsxFileName = \"/home/ronaldochoiga/test_node_app/react/react_app/src/Login.js\";\nimport React, { Component } from 'react';\nimport MessagingPanel from './MessagingPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value,\n        error: '' // Clear any previous error messages\n      });\n    };\n    this.login = async e => {\n      e.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      try {\n        const response = await fetch('http://localhost:3030/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username,\n            password\n          })\n        });\n        if (response.ok) {\n          console.log('User logged in successfully');\n          // Set authenticated state and username in App component\n          this.props.setUsername(username);\n        } else {\n          const data = await response.text();\n          this.setState({\n            error: data\n          });\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        this.setState({\n          error: 'An error occurred, please try again later.'\n        });\n      }\n    };\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n  }\n  render() {\n    const {\n      error\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props;\n\n    // If authenticated, render MessagingPanel component\n    if (isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(MessagingPanel, {\n        username: this.props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.login,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 110\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 114\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Login;","map":{"version":3,"names":["React","Component","MessagingPanel","jsxDEV","_jsxDEV","Login","constructor","props","handleInputChange","e","setState","target","name","value","error","login","preventDefault","username","password","state","response","fetch","method","headers","body","JSON","stringify","ok","console","log","setUsername","data","text","render","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","id","children","onSubmit","type","onChange","style","color"],"sources":["/home/ronaldochoiga/test_node_app/react/react_app/src/Login.js"],"sourcesContent":["import React, { Component } from 'react';\nimport MessagingPanel from './MessagingPanel';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      error: ''\n    };\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      error: '' // Clear any previous error messages\n    });\n  }\n\n  login = async (e) => {\n    e.preventDefault();\n    const { username, password } = this.state;\n\n    try {\n      const response = await fetch('http://localhost:3030/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ username, password })\n      });\n\n      if (response.ok) {\n        console.log('User logged in successfully');\n        // Set authenticated state and username in App component\n        this.props.setUsername(username);\n      } else {\n        const data = await response.text();\n        this.setState({ error: data });\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      this.setState({ error: 'An error occurred, please try again later.' });\n    }\n  }\n\n  render() {\n    const { error } = this.state;\n    const { isAuthenticated } = this.props;\n\n    // If authenticated, render MessagingPanel component\n    if (isAuthenticated) {\n      return <MessagingPanel username={this.props.username} />;\n    }\n\n    return (\n      <div id=\"Login\">\n        <form onSubmit={this.login}>\n          <label>Username:</label><br/>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleInputChange} /><br/>\n          <label>Password:</label><br/>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInputChange} /><br/>\n          <input type=\"submit\" value=\"Log In\" />\n          {error && <p style={{ color: 'red' }}>{error}</p>}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}