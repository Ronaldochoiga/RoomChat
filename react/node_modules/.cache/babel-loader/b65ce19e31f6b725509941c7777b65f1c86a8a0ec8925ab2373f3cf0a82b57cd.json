{"ast":null,"code":"var _jsxFileName = \"/home/ronaldochoiga/test_node_app/react/react_app/src/roompanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RoomMessages from './roomMessages';\nimport DisplayConversation from './DisplayConversation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomPanel = ({\n  username,\n  roomName\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const sendMessage = message => {\n    console.log('Sending message:', message);\n    // Implement the logic to send the message to the specified room\n    // Example: send message to the backend or WebSocket server\n    // After sending the message, you can update the conversation display\n    const newMessage = {\n      username,\n      message\n    }; // Assuming the username is available\n    setMessages([...messages, newMessage]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room: \", roomName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayConversation, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RoomMessages, {\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(RoomPanel, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = RoomPanel;\nexport default RoomPanel;\nvar _c;\n$RefreshReg$(_c, \"RoomPanel\");","map":{"version":3,"names":["React","useState","RoomMessages","DisplayConversation","jsxDEV","_jsxDEV","RoomPanel","username","roomName","_s","messages","setMessages","sendMessage","message","console","log","newMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ronaldochoiga/test_node_app/react/react_app/src/roompanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport RoomMessages from './roomMessages';\nimport DisplayConversation from './DisplayConversation';\n\nconst RoomPanel = ({ username, roomName }) => {\n    const [messages, setMessages] = useState([]);\n\n    const sendMessage = (message) => {\n        console.log('Sending message:', message);\n        // Implement the logic to send the message to the specified room\n        // Example: send message to the backend or WebSocket server\n        // After sending the message, you can update the conversation display\n        const newMessage = { username, message }; // Assuming the username is available\n        setMessages([...messages, newMessage]);\n    };\n\n    return (\n        <div className=\"room-panel\">\n            <h2>Room: {roomName}</h2>\n            <DisplayConversation messages={messages} />\n            <RoomMessages sendMessage={sendMessage} />\n        </div>\n    );\n}\n\nexport default RoomPanel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,WAAW,GAAIC,OAAO,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,OAAO,CAAC;IACxC;IACA;IACA;IACA,MAAMG,UAAU,GAAG;MAAET,QAAQ;MAAEM;IAAQ,CAAC,CAAC,CAAC;IAC1CF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,UAAU,CAAC,CAAC;EAC1C,CAAC;EAED,oBACIX,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBb,OAAA;MAAAa,QAAA,GAAI,QAAM,EAACV,QAAQ;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBjB,OAAA,CAACF,mBAAmB;MAACO,QAAQ,EAAEA;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CjB,OAAA,CAACH,YAAY;MAACU,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAAAb,EAAA,CAnBKH,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}