{"ast":null,"code":"var _jsxFileName = \"/home/ronaldochoiga/test_node_app/react/react_app/src/roompanel.js\";\n// RoomPanel.js\nimport React from 'react';\nimport RoomMessages from './roomMessages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomPanel = ({\n  roomName,\n  connection\n}) => {\n  const sendMessage = message => {\n    if (connection && connection.readyState === WebSocket.OPEN) {\n      const data = {\n        type: 'message',\n        room: roomName,\n        message: message\n      };\n      connection.send(JSON.stringify(data));\n    } else {\n      console.error('WebSocket connection is not available.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Room Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Room Name: \", roomName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoomMessages, {\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = RoomPanel;\nexport default RoomPanel;\nvar _c;\n$RefreshReg$(_c, \"RoomPanel\");","map":{"version":3,"names":["React","RoomMessages","jsxDEV","_jsxDEV","RoomPanel","roomName","connection","sendMessage","message","readyState","WebSocket","OPEN","data","type","room","send","JSON","stringify","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ronaldochoiga/test_node_app/react/react_app/src/roompanel.js"],"sourcesContent":["// RoomPanel.js\nimport React from 'react';\nimport RoomMessages from './roomMessages';\n\nconst RoomPanel = ({ roomName, connection }) => {\n  const sendMessage = (message) => {\n    if (connection && connection.readyState === WebSocket.OPEN) {\n      const data = {\n        type: 'message',\n        room: roomName,\n        message: message\n      };\n      connection.send(JSON.stringify(data));\n    } else {\n      console.error('WebSocket connection is not available.');\n    }\n  };\n\n  return (\n    <div className=\"room-panel\">\n      <h2>Room Details</h2>\n      <p>Room Name: {roomName}</p>\n      <RoomMessages sendMessage={sendMessage} />\n    </div>\n  );\n};\n\nexport default RoomPanel;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAC9C,MAAMC,WAAW,GAAIC,OAAO,IAAK;IAC/B,IAAIF,UAAU,IAAIA,UAAU,CAACG,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;MAC1D,MAAMC,IAAI,GAAG;QACXC,IAAI,EAAE,SAAS;QACfC,IAAI,EAAET,QAAQ;QACdG,OAAO,EAAEA;MACX,CAAC;MACDF,UAAU,CAACS,IAAI,CAACC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;IACvC,CAAC,MAAM;MACLM,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;IACzD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBlB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA;MAAAkB,QAAA,GAAG,aAAW,EAAChB,QAAQ;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BtB,OAAA,CAACF,YAAY;MAACM,WAAW,EAAEA;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACC,EAAA,GArBItB,SAAS;AAuBf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}